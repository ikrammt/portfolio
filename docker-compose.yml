services:
  nginx: #Acts as reverse proxy and load balancer
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf:ro # Mounts custom Nginx config (read-only)
    depends_on:
      - backend
    networks:
      - pf-network
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80"
    networks:
      - pf-network
    depends_on:
      - nginx

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000"
    environment:
      INSTANCE_ID: "backend-$${HOSTNAME:0:8}" # Unique instance ID geerated by docker 
      DB_HOST: postgres-primary
      DB_REPLICAS: "postgres-replica1,postgres-replica2"
      DB_USER: postgres
      DB_PASSWORD: 1234
      DB_NAME: portfolio_db
      DB_PORT: 5432
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 15s
      timeout: 5s
      retries: 3
    deploy:
      replicas: 3
    networks:
      - pf-network
    depends_on:
      - postgres-primary
      - rabbitmq

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    environment:
      WORKER_ID: worker_$${HOSTNAME:0:8}"
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    deploy:
      replicas: 2
    networks:
      - pf-network
    depends_on:
      - rabbitmq

  postgres-primary:
    image: postgres:15.10
    volumes:
      - pg_primary_data:/var/lib/postgresql/data
      - ./db/portfolio_db.sql:/docker-entrypoint-initdb.d/portfolio_db.sql
    environment:
      POSTGRES_DB: portfolio_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_REPLICATION_USER: replicator
      POSTGRES_REPLICATION_PASSWORD: 1234
    networks:
      - pf-network

  postgres-replica1:
    image: postgres:15.10
    volumes:
      - pg_replica1_data:/var/lib/postgresql/data
    environment:
      POSTGRES_REPLICATION_MODE: replica
      POSTGRES_REPLICATION_PRIMARY_HOST: postgres-primary
      POSTGRES_REPLICATION_USER: replicator
      POSTGRES_REPLICATION_PASSWORD: 1234
    depends_on:
      - postgres-primary
    networks:
      - pf-network

  postgres-replica2:
    image: postgres:15.10
    volumes:
      - pg_replica2_data:/var/lib/postgresql/data
    environment:
      POSTGRES_REPLICATION_MODE: replica
      POSTGRES_REPLICATION_PRIMARY_HOST: postgres-primary
      POSTGRES_REPLICATION_USER: replicator
      POSTGRES_REPLICATION_PASSWORD: 1234
    depends_on:
      - postgres-primary
    networks:
      - pf-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"     # AMQP protocol
      - "15672:15672"   # RabbitMQ Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - pf-network

networks:
  pf-network:
    driver: bridge

volumes:
  pg_primary_data:
  pg_replica1_data:
  pg_replica2_data:
